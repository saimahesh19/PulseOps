services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  producer:
    build: ./producer
    container_name: producer
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_QUEUE: tasks
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  ml_service:
    build: ./ml_service
    container_name: ml_service
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_QUEUE: tasks
      REDIS_HOST: redis
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./k8s/loki-config.yaml:/etc/loki/loki-config.yaml:ro
      - ./loki_data/index:/loki/index
      - ./loki_data/chunks:/loki/chunks
    command: -config.file=/etc/loki/loki-config.yaml

  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log:/var/log:ro
      - ./k8s/promtail-config.yaml:/etc/promtail/config.yaml:ro
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki

  victoria:
    image: victoriametrics/victoria-metrics:v1.127.0
    container_name: victoria
    ports:
      - "8428:8428"
    volumes:
      - victoria-metrics-data:/victoria-metrics-data
    command:
      - "--selfScrapeInterval=5s"
      - "--storageDataPath=/victoria-metrics-data"

  telegraf:
    image: telegraf:1.36
    container_name: telegraf
    volumes:
      - ./k8s/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.1.1
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    depends_on:
      - loki
      - victoria

volumes:
  victoria-metrics-data:
